function conv(form,num,name){
hordia=form.hordia.value;
num=eval(num);
if(num!=-1){if(name=="selectLambda"){sel=eval(form.Lambda.value);
lastno=lastnum[1];
}else if(name=="selectMu"){sel=eval(form.Mu.value);
lastno=lastnum[2];
}}else{lastnum=new Array(0);
lastno=num;
}switch(lastno){case 0:switch(num){case 1:sel/=hordia;
break;
case 2:sel/=60*hordia;
break;
case 3:sel/=3600*hordia;
break;
default:break;
}break;
case 1:switch(num){case 0:sel*=hordia;
break;
case 2:sel/=60;
break;
case 3:sel/=3600;
break;
default:break;
}break;
case 2:switch(num){case 0:sel*=60*hordia;
break;
case 1:sel*=60;
break;
case 3:sel/=60;
break;
default:break;
}break;
case 3:switch(num){case 0:sel*=3600*hordia;
break;
case 1:sel*=3600;
break;
case 2:sel*=60;
break;
default:break;
}break;
default:break;
}if(num!=-1){switch(name){case "selectLambda":form.Lambda.value=sel;
lastnum[1]=num;
break;
case "selectMu":form.Mu.value=sel;
lastnum[2]=num;
break;
}}}function comb(alta,baja){num=fact(alta)/(fact(baja)*fact(eval(alta-baja)));
return num;
}function evalExp(form){if(form.Trab.value) form.Trab.value=eval(form.Trab.value);
if(form.Ser.value) form.Ser.value=eval(form.Ser.value);
if(form.Cap.value) form.Cap.value=eval(form.Cap.value);
if(form.Ent.value) form.Ent.value=eval(form.Ent.value);
if(form.Mu.value) form.Mu.value=eval(form.Mu.value);
if(form.Pn.value) form.Pn.value=eval(form.Pn.value);
if(form.Lambda.value) form.Lambda.value=eval(form.Lambda.value);
}function pot(base,exponente){num = Math.pow(base,exponente);
return num;
}function raiz(num,exp){num = Math.pow(num,1/exp);
return num;
}function abs(num){num = Math.abs(num);
return num;
}function fact(num){if(num==0) return 1;
else if(num>1){return num*fact(num-1);
}else return num;
}function compute(form){Lambda=eval(form.Lambda.value);
Mu=eval(form.Mu.value);
c=eval(form.Ser.value);
k=eval(form.Cap.value);
m=eval(form.Ent.value);
t=eval(form.t.value);
tq=eval(form.tq.value);
Modelo=eval(form.Modelo.value);
n=T=Tq=r=Lambdap=Ro=Po=Pn=L=Lq=W=Wq=eval(0);
form.Lambdap.value="";
form.Lq.value="";
form.L.value="";
form.Wq.value="";
form.W.value="";
form.T.value="";
form.Tq.value="";
form.Pn.value="";
form.Ro.value="";
ErrMod=unescape("You did not select any model");
Errc=unescape("The cell for C (no. of servers) is null");
Errk=unescape("The cell for K (queue capacity) is null");
Errm=unescape("The cell for M (Entities population is null");
ErrMu=unescape("The cell for Mu is null");
ErrLambda=unescape("The cell for Labda is null");
ErrNumeroEnt=unescape("The probability that there would be more entities in the system than the total population is zero.");
ErrUnids=unescape("There is a unit incompatibility between Mu and Lambda");
ErrRo=unescape("The queues will tend to infinity as Lambda is greater or equal than "+c+" times Mu");
if(Modelo==undefined){alert(ErrMod);
return;
}if(c==undefined){alert(Errc);
return;
}if(k==undefined){alert(Errk);
return;
}if(m==undefined){alert(Errm);
return;
}if(Lambda==undefined){alert(ErrLambda);
return;
}if(Mu==undefined){alert(ErrMu);
return;
} if((form.selectMu.value==-1 || form.selectLambda.value==-1) && form.selectMu.value!=form.selectLambda.value){alert(ErrUnids);
return;
}if(form.n.value>form.Ent.value){alert(ErrNumeroEnt);
}if(form.selectMu.value!=form.selectLambda.value){conv(form,form.selectMu.value,form.selectLambda.name);
form.selectLambda.value=form.selectMu.value;
Lambda=eval(form.Lambda.value);
}switch(eval(form.selectMu.value)){case 0:form.unidadt.value="Days)=";
form.unidadtq.value="Days)=";
form.unidadW.value="[Days]";
form.unidadWq.value="[Days]";
break;
case 1:form.unidadt.value="hrs)=";
form.unidadtq.value="hrs)=";
form.unidadW.value="[hrs]";
form.unidadWq.value="[hrs]";
break;
case 2:form.unidadt.value="mins)=";
form.unidadtq.value="mins)=";
form.unidadW.value="[mins]";
form.unidadWq.value="[mins]";
break;
case 3:form.unidadt.value="secs)=";
form.unidadtq.value="secs)=";
form.unidadW.value="[secs]";
form.unidadWq.value="[secs]";
break;
default:form.unidadt.value="time units)=";
form.unidadtq.value="time units)=";
form.unidadW.value="time units";
form.unidadWq.value="time units";
}if(Modelo==1 && Lambda>= Mu*c){alert(ErrRo);
return;
} if(form.n.value==""){form.n.value=0;
}n=eval(form.n.value);
T=eval(form.T.value);
Tq=eval(form.Tq.value);
r=Lambda/Mu;
if(form.Modelo.value==1){cp=c+1;
Ro= Lambda/(c*Mu);
form.Ro.value=Ro;
for(i=0, Po=0;
i<=c-1;
i++){Po+=pot(r,i)/fact(i);
}Po+=(c*pot(r,c))/(fact(c)*(c-r));
Po = pot(Po,-1);
 if(n==0 || n==""){Pn=Po;
}else if(n>=1 && n<=c){Pn=(pot(r,n)*Po)/fact(n);
}else if(n>c){Pn=(Po*pot(Ro,n)*pot(c,c))/fact(c);
}else form.Pn.value="";
form.Pn.value=Pn;
cx=1-r/c;
Lq=pot(r,cp)*Po/(fact(c)*c*pot(cx,2));
form.Lq.value=Lq;
Wq=Lq/Lambda;
form.Wq.value=Wq;
L= r+(Po*pot(r,cp))/(c*fact(c)*pot(cx,2));
form.L.value=L;
W=L/Lambda;
form.W.value=W;
Pjs=pot(r,c)*Po/(fact(c)*(1-Ro));
if((c-1)==c*Ro){T=1-Math.exp(-Mu*t)*(1+Pjs*Mu*t);
}else{T=1-(Math.exp(-Mu*t)*(1+Pjs*(1-Math.exp(-Mu*t*(c-1-c*Ro)))/(c-1-c*Ro)));
}form.T.value=T;
Tq=1-(Pjs*Math.exp(-c*Mu*(1-Ro)*tq));
form.Tq.value=Tq;
}if(form.Modelo.value==2){Pn=pot(r,n)*Math.exp(-r)/fact(n);
form.Pn.value=Pn;
W=1/Mu;
form.W.value=W;
L=r;
form.L.value=L;
}if(form.Modelo.value==3){Ro=Lambda/(c*Mu);
form.Ro.value=Ro;
if(Ro!=1){for(i=0;
i<=c-1;
i++){Po+=pot(r,i)/fact(i);
}Po+= pot(r,c)*(1-pot(Ro,k-c+1))/(fact(c)*(1-Ro));
Po = pot(Po,-1);
}else{for(i=eval(0);
i<=c-1;
i++){Po+=pot(r,i)/fact(i);
}Po+= pot(r,c)*(k-c+1)/(fact(c));
Po = pot(Po,-1);
}if(Ro!=1){Lq=Po*pot(c*Ro,c)*Ro*(1-pot(Ro,k-c+1)-(1-Ro)*(k-c+1)*pot(Ro,k-c))/(fact(c)*pot(1-Ro,2));
}else{Lq=Po*pot(c,c)*(k-c)*(k-c+1)/(2*fact(c));
}form.Lq.value=Lq;
for(i=0;
i<=c-1;
i++){L=(c-i)*pot(Ro*c,i)/fact(i);
}L*=-Po;
L+= Lq+c;
form.L.value=L;
if(n==0){Pn=Po;
}else if(1<=n && n<=c){Pn = pot(r,n)*Po/fact(n);
}else{Pn = pot(r,n)*Po/(fact(c)*pot(c,n-c));
}form.Pn.value=Pn;
if(k==0){Pk=Po;
}else if(1<=k && k<=c){Pk = pot(r,k)*Po/fact(k);
}else{Pk = pot(r,k)*Po/(fact(c)*pot(c,k-c));
}Lambdap=Lambda*(1-Pk);
form.Lambdap.value=Lambdap;
W=L/Lambdap;
form.W.value=W;
Wq=W-1/Mu;
form.Wq.value=Wq;
form.Tq.value="";
}if(form.Modelo.value==4){for(i=0,Po=0;
i<=c-1;
i++){Po+=comb(m,i)*pot(r,i);
}for(i=c,Px=0;
i<=m;
i++){Px+=comb(m,i)*fact(i)*pot(r,i)/(pot(c,i-c)*fact(c));

console.log(Px)}Po=1/(Po+Px);
if(0<=n && n<c){Pn=comb(m,n)*pot(r,n)*Po;
}else if(n>=c && n<=m){Pn=comb(m,n)*fact(n)*pot(r,n)*Po/(pot(c,n-c)*fact(c));
}else  Pn=0;
form.Pn.value=Pn;
L=0;
for(i=0;
i<=c-1;
i++){L+=i*comb(m,i)*pot(r,i);
}for(i=c;
i<=m;
i++){L+=i*comb(m,i)*pot(r,i)*fact(i)/(pot(c,i-c)*fact(c));
}L*=Po;
form.L.value=L;
Lq=0;
for(i=0;
i<=c-1;
i++){Lq+=(c-i)*comb(m,i)*pot(r,i);
}Lq*=Po;
Lq=Lq+L-c;
form.Lq.value=Lq;
W=L/(Lambda*(m-L));
form.W.value=W;
Wq=Lq/(Lambda*(m-L));
form.Wq.value=Wq;
Lambdap=Mu*(L-Lq);
form.Lambdap.value=Lambdap;
}redondear(form);
}function redondear(form){decimales=Math.floor(form.decimales.value);
for(i=0;
i<form.elements.length;
i++){val=form.elements[i].value;
switch(form.elements[i].name){case "T":case "Tq":case "Ro":case "Lq":case "L":case "W":case "Wq":case "Pn":case "Lambdap":if(form.elements[i].value != "") form.elements[i].value=Math.round(val*Math.pow(10,decimales))/Math.pow(10,decimales);
if(form.elements[i].value.length-2>=9) form.elements[i].size=form.elements[i].value.length-2;
else form.elements[i].size=9;
break;
default:break;
}}}function f(form,num){if(num==1){form.Modelo.value=num;
form.Ser.value="";
form.Cap.value=Number.POSITIVE_INFINITY;
form.Ent.value=Number.POSITIVE_INFINITY;
}if(num==2){form.Modelo.value=num;
form.Ser.value=Number.POSITIVE_INFINITY;
form.Cap.value=Number.POSITIVE_INFINITY;
form.Ent.value=Number.POSITIVE_INFINITY;
}if(num==3){form.Modelo.value=num;
form.Ser.value="";
form.Cap.value="";
form.Ent.value=Number.POSITIVE_INFINITY;
}if(num==4){form.Modelo.value=num;
form.Ser.value="";
form.Cap.value=Number.NaN;
form.Ent.value="";
}}function g(form,num){if(num==1){form.LambdaMu.value=num;
}if(num==2){form.LambdaMu.value=num;
}}CHI_EPSILON=0.000001;/*accuracy of critchi approximation*/
CHI_MAX=99999.0;/*maximum chi square value*/
LOG_SQRT_PI=0.5723649429247000870717135;/*log(sqrt(pi))*/
I_SQRT_PI=0.5641895835477562869480795;/*1/sqrt(pi)*/
BIGX=20.0;/*max value to represent exp(x)*/
function ex(x){if(x<-BIGX){return 0;
}else{return Math.exp(x);
}}function pochisq(x, df){a=y=s=e=c=z=0;
even=0;
if(x<= 0 || df<1) return(1.0);
a = 0.5*x;
even =(2*(df/2)) == df;
if(df>1) y = ex(-a);
s =(even ? y:(2.0*poz(-Math.sqrt(x))));
if(df>2){x = 0.5*(df-1.0);
z =(even ? 1.0:0.5);
if(a>BIGX){e =(even ? 0.0:LOG_SQRT_PI);
c = Math.log(a);
while(z<= x){e = Math.log(z)+e;
s+= ex(c*z-a-e);
z+= 1.0;
}return(s);
}else{e =(even ? 1.0:(I_SQRT_PI/Math.sqrt(a)));
c = 0.0;
while(z<= x){e = e*(a/z);
c = c+e;
z+= 1.0;
}return(c*y+s);
}}else return(s);
}function critchi(p, df){minchisq = 0;
maxchisq = CHI_MAX;
chisqval = 0;
if(p<= 0) return(maxchisq);
else if(p>= 1) return(0);
chisqval = df/Math.sqrt(p);
while(maxchisq-minchisq>CHI_EPSILON){if(pochisq(chisqval, df)<p) maxchisq = chisqval;
else minchisq = chisqval;
chisqval =(maxchisq+minchisq)*0.5;
}return(chisqval);
}function poz(z){y=x=w=0;
if(z == 0) x = 0;
else{y = 0.5*fabs(z);
if(y>=(Z_MAX*0.5)) x = 1.0;
else if(y<1.0){w = y*y;
x =((((((((0.000124818987*w-0.001075204047)*w+0.005198775019)*w-0.019198292004)*w+0.059054035642)*w-0.151968751364)*w+0.319152932694)*w-0.531923007300)*w+0.797884560593)*y*2.0;
}else{y-= 2.0;
x =(((((((((((((-0.000045255659*y+0.000152529290)*y-0.000019538132)*y-0.000676904986)*y+0.001390604284)*y-0.000794620820)*y-0.002034254874)*y+0.006549791214)*y-0.010557625006)*y+0.011630447319)*y-0.009279453341)*y+0.005353579108)*y-0.002141268741)*y+0.000535310849)*y+0.999936657524;
}}return(z>0.0 ?((x+1.0)*0.5):((1.0-x)*0.5));
}function fabs(num){return(num<0 ?-num:num);
}function analiza(form){string1=form.analisis.value;
array1=new Array();
valor="";
suma=0;
n=0;
for(i=0;
i<string1.length;
i++){if(escape(string1.charAt(i))!= "%0A" && escape(string1.charAt(i))!= "%0D"){valor+=string1.charAt(i);
}else if(escape(string1.charAt(i)) == "%0A"){if(valor){suma+=eval(valor);
array1[n]=eval(valor);
n++;
}valor="";
}}if(valor){suma+=eval(valor);
array1[n]=eval(valor);
n++;
}LambdaExp=n/suma;
noRan=1+3.32*Math.log(n);
varRan=Math.round(1/noRan);
rango=new Array();
for(i=0;
i<noRan;
i++){rango[i]=Math.log(1-varRan*(i+1))/-LambdaExp;
}Ei=n/noRan;
Oi=new Array();
valor="";
array1.sort(doCompare);
function doCompare(a,b){return a-b}j=0;
for(i=0;
i<=rango.length;
i++) Oi[i]=0;
for(i=0;
i<array1.length;
i++){if(array1[i]<=rango[j]){Oi[j]++;
}else{j++;
Oi[j]++;
}}Ji=0;
for(i=0;
i<rango.length;
i++){k=Ei-Oi[i];
Ji+=Math.pow(k, 2)/Ei;
}Pchival=pochisq(Ji, rango.length-1);
form.Pval.value="Val-P="+Math.round(Pchival*Math.pow(10,4))/Math.pow(10,4)+" Xi="+Math.round(Ji*Math.pow(10,4))/Math.pow(10,4);
form.Pval.size=form.Pval.value.length-2;
if(form.LambdaMu.value==1){form.Lambda.value=n/suma;
}else if(form.LambdaMu.value==2){form.Mu.value=n/suma;
}}